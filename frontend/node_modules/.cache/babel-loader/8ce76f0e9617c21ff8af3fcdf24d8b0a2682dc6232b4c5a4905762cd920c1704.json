{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sortify\\\\sortify\\\\frontend\\\\src\\\\components\\\\OrdenarPlaylists.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdenarPlaylists = ({\n  setPlaylists\n}) => {\n  _s();\n  const [isAnimating, setIsAnimating] = React.useState(false);\n  const fetchSortedPlaylists = async order => {\n    setIsAnimating(true);\n    const token = localStorage.getItem('spotify_access_token');\n    if (!token) {\n      console.error('Token de acceso no disponible');\n      setIsAnimating(false);\n      return;\n    }\n    console.log('Token de acceso:', token);\n    console.log('Orden:', order);\n    let retries = 3; // Intentar hasta 3 veces en caso de error 429 u otro error\n    while (retries > 0) {\n      try {\n        const response = await axios.get(`http://localhost:4000/playlists?order=${order}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const sortedPlaylists = response.data;\n        console.log('Playlists ordenadas:', sortedPlaylists);\n        setPlaylists(sortedPlaylists);\n        setIsAnimating(false);\n        return; // Salir del bucle si la solicitud fue exitosa\n      } catch (error) {\n        if (error.response && error.response.status === 429) {\n          console.warn('Demasiadas solicitudes. Reintentando...');\n          retries--;\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Esperar 1 segundo antes de reintentar\n        } else {\n          console.error('Error al realizar la solicitud:', error.message);\n          setIsAnimating(false);\n          return;\n        }\n      }\n    }\n    console.error('Se alcanzó el máximo de reintentos sin éxito.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchSortedPlaylists('asc'),\n      children: \"Ordenar de menor a mayor duraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchSortedPlaylists('desc'),\n      children: \"Ordenar de mayor a menor duraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isAnimating && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ordenando playlists...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdenarPlaylists, \"fVzM11GJBSX9GuOWSLFqeCknr64=\");\n_c = OrdenarPlaylists;\nexport default OrdenarPlaylists;\nvar _c;\n$RefreshReg$(_c, \"OrdenarPlaylists\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","OrdenarPlaylists","setPlaylists","_s","isAnimating","setIsAnimating","useState","fetchSortedPlaylists","order","token","localStorage","getItem","console","error","log","retries","response","get","headers","Authorization","sortedPlaylists","data","status","warn","Promise","resolve","setTimeout","message","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sortify/sortify/frontend/src/components/OrdenarPlaylists.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst OrdenarPlaylists = ({ setPlaylists }) => {\r\n  const [isAnimating, setIsAnimating] = React.useState(false);\r\n\r\n  const fetchSortedPlaylists = async (order) => {\r\n    setIsAnimating(true);\r\n    const token = localStorage.getItem('spotify_access_token');\r\n    if (!token) {\r\n      console.error('Token de acceso no disponible');\r\n      setIsAnimating(false);\r\n      return;\r\n    }\r\n  \r\n    console.log('Token de acceso:', token);\r\n    console.log('Orden:', order);\r\n  \r\n    let retries = 3; // Intentar hasta 3 veces en caso de error 429 u otro error\r\n    while (retries > 0) {\r\n      try {\r\n        const response = await axios.get(`http://localhost:4000/playlists?order=${order}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        const sortedPlaylists = response.data;\r\n        console.log('Playlists ordenadas:', sortedPlaylists);\r\n        setPlaylists(sortedPlaylists);\r\n        setIsAnimating(false);\r\n        return; // Salir del bucle si la solicitud fue exitosa\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 429) {\r\n          console.warn('Demasiadas solicitudes. Reintentando...');\r\n          retries--;\r\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Esperar 1 segundo antes de reintentar\r\n        } else {\r\n          console.error('Error al realizar la solicitud:', error.message);\r\n          setIsAnimating(false);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    console.error('Se alcanzó el máximo de reintentos sin éxito.');\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => fetchSortedPlaylists('asc')}>Ordenar de menor a mayor duración</button>\r\n      <button onClick={() => fetchSortedPlaylists('desc')}>Ordenar de mayor a menor duración</button>\r\n      {isAnimating && <p>Ordenando playlists...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdenarPlaylists;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMC,oBAAoB,GAAG,MAAOC,KAAK,IAAK;IAC5CH,cAAc,CAAC,IAAI,CAAC;IACpB,MAAMI,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC;IAC1D,IAAI,CAACF,KAAK,EAAE;MACVG,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;MAC9CR,cAAc,CAAC,KAAK,CAAC;MACrB;IACF;IAEAO,OAAO,CAACE,GAAG,CAAC,kBAAkB,EAAEL,KAAK,CAAC;IACtCG,OAAO,CAACE,GAAG,CAAC,QAAQ,EAAEN,KAAK,CAAC;IAE5B,IAAIO,OAAO,GAAG,CAAC,CAAC,CAAC;IACjB,OAAOA,OAAO,GAAG,CAAC,EAAE;MAClB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,yCAAyCT,KAAK,EAAE,EAAE;UACjFU,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUV,KAAK,EAAE;YAChC,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACF,MAAMW,eAAe,GAAGJ,QAAQ,CAACK,IAAI;QACrCT,OAAO,CAACE,GAAG,CAAC,sBAAsB,EAAEM,eAAe,CAAC;QACpDlB,YAAY,CAACkB,eAAe,CAAC;QAC7Bf,cAAc,CAAC,KAAK,CAAC;QACrB,OAAO,CAAC;MACV,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACd,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;UACnDV,OAAO,CAACW,IAAI,CAAC,yCAAyC,CAAC;UACvDR,OAAO,EAAE;UACT,MAAM,IAAIS,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3D,CAAC,MAAM;UACLb,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACc,OAAO,CAAC;UAC/DtB,cAAc,CAAC,KAAK,CAAC;UACrB;QACF;MACF;IACF;IACAO,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC;EAChE,CAAC;EAGD,oBACEb,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAQ6B,OAAO,EAAEA,CAAA,KAAMtB,oBAAoB,CAAC,KAAK,CAAE;MAAAqB,QAAA,EAAC;IAAiC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9FjC,OAAA;MAAQ6B,OAAO,EAAEA,CAAA,KAAMtB,oBAAoB,CAAC,MAAM,CAAE;MAAAqB,QAAA,EAAC;IAAiC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9F7B,WAAW,iBAAIJ,OAAA;MAAA4B,QAAA,EAAG;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAAC9B,EAAA,CApDIF,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AAsDtB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}